// <auto-generated />
using System;
using DesafioTDD.infra.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DesafioTDD.infra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220503210433_SeedSchema")]
    partial class SeedSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("DesafioTDD.domain.Entities.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CardNumberPrefix")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("DesafioTDD.domain.Entities.CashMachine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AmountFifty")
                        .HasColumnType("int");

                    b.Property<int>("AmountFive")
                        .HasColumnType("int");

                    b.Property<int>("AmountOne")
                        .HasColumnType("int");

                    b.Property<int>("AmountOneHundred")
                        .HasColumnType("int");

                    b.Property<int>("AmountTen")
                        .HasColumnType("int");

                    b.Property<int>("AmountTwenty")
                        .HasColumnType("int");

                    b.Property<int>("AmountTwo")
                        .HasColumnType("int");

                    b.Property<int>("AmountTwoHundred")
                        .HasColumnType("int");

                    b.Property<int?>("BankId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("CashMachines");
                });

            modelBuilder.Entity("DesafioTDD.domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("CardNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("DesafioTDD.domain.Entities.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("DesafioTDD.domain.Entities.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CashMachineId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("CashMachineId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("DesafioTDD.domain.Entities.CashMachine", b =>
                {
                    b.HasOne("DesafioTDD.domain.Entities.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId");

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("DesafioTDD.domain.Entities.Customer", b =>
                {
                    b.HasOne("DesafioTDD.domain.Entities.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId");

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("DesafioTDD.domain.Entities.Operation", b =>
                {
                    b.HasOne("DesafioTDD.domain.Entities.CashMachine", "CashMachine")
                        .WithMany()
                        .HasForeignKey("CashMachineId");

                    b.HasOne("DesafioTDD.domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("CashMachine");

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
